<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UIBASOFT.Base.Core</name>
    </assembly>
    <members>
        <member name="T:UIBASOFT.Base.Core.Infraestructura.Expressions.TranslatingExpressionVisitor`2">
            <summary>
            LINQ expressionlardaki bir tipi diğer bir tipe dönüştürür. Servis ve data layer arası 
            LINQ Expressionları parametre olarak geçerken dönüşümde kullanılır. bkz...
            </summary>
            <remarks>
            Sınıf tüm durumları kapsamaz, tiplerle ilgili exception verdiğinde ilgili 
            LINQ expressionını destekliyorsak, MutateType metoduna ilgili tip eklenerek sorun çözülEBİLİr.
            </remarks>
            <typeparam name="TFrom">The type of from.</typeparam>
            <typeparam name="TTo">The type of to.</typeparam>
        </member>
        <member name="M:UIBASOFT.Base.Core.Infraestructura.Expressions.TranslatingExpressionVisitor.MutateMember(System.Reflection.MemberInfo,System.Type,System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="originalMember"></param>
            <param name="fromType"></param>
            <param name="toType"></param>
            <param name="targetType"></param>
            <remarks>originalMember'dan ViewModelBase gibi bir base class gelebilir. Bu durumda farklı bir 
            ViewModel'in Id'si ile karşılaştırma yapıldığında, eşitliğin her iki tarafı da toType'a dönüştürülür. 
            Bu hatalı olduğu için targetType parametresine originalMember'ın eriştiği Type verilebilir.</remarks>
            <returns></returns>
        </member>
        <member name="M:UIBASOFT.Base.Core.Security.IPasswordCipher.Encrypt(System.String)">
            <summary>
            Crea un Hash de cifrado para la contraseña.
            </summary>
            <param name="password">Contraseña a generar su correspondiente Hash.</param>
            <returns>Retorna la contraseña cifrada.</returns>
        </member>
        <member name="M:UIBASOFT.Base.Core.Security.IPasswordCipher.Decrypt(System.String)">
            <summary>
            Descifra la contraseña a partir de la contraseña cifrada.
            </summary>
            <param name="passwordEncrypt"> Contraseña cifrada.</param>
            <returns>Retorna la contraseña descrifada.</returns>
        </member>
        <member name="M:UIBASOFT.Base.Core.Security.IPasswordCipher.ValidatePassword(System.String,System.String)">
            <summary>
            Determina la valides de la contraseña a partir de su codigo Hash.
            </summary>
            <param name="password">Contraseña sin cifrar.</param>
            <param name="passwordHash">Contraseña cifrada.</param>
            <returns>Determina la valides de la contraseña. Devuelve verdadero si la contraseña es valida.</returns>
        </member>
    </members>
</doc>
